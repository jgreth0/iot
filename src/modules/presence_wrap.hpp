
#ifndef _PRESENCE_WRAP_H_
#define _PRESENCE_WRAP_H_

#include "presence.hpp"

////////////////////////////////////////////////////////////////////////////////
// This module simply ORs the present() results from an array of other presence
// modules. The only source of complexity is in correctly computing
// get_last_time_not_present().
////////////////////////////////////////////////////////////////////////////////
class presence_wrap : public presence {
private:
    presence* modules;
    int module_count = 0;

protected:
    ////////////////////////////////////////////////////////////////////////////
    //
    ////////////////////////////////////////////////////////////////////////////
    void sync(bool last = false);

public:
    presence_wrap(char* name, presence* modules, int count);
    presence_wrap(const char* name, presence* modules, int count);

    ////////////////////////////////////////////////////////////////////////////
    //
    ////////////////////////////////////////////////////////////////////////////
    void enable();

    ////////////////////////////////////////////////////////////////////////////
    //
    ////////////////////////////////////////////////////////////////////////////
    void disable();
};

#endif
