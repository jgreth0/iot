
#ifndef _PRESENCE_ICMP_H_
#define _PRESENCE_ICMP_H_

#include "presence.hpp"

////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////
class presence_icmp : public presence {
private:
    ////////////////////////////////////////////////////////////////////////////
    // Configuration - only written by the constructor.
    ////////////////////////////////////////////////////////////////////////////
    char addr[64];

    ////////////////////////////////////////////////////////////////////////////
    // Status information - updated on every sync()
    // Access must be protected by mutex.
    ////////////////////////////////////////////////////////////////////////////
    time_point last_time_present;
    time_point last_time_not_present;
    duration time_limit;
    std::mutex mtx;
    bool presence_reported = false, last_reported = false;

    ////////////////////////////////////////////////////////////////////////////
    // IO context - A single connection is used multiple times.
    ////////////////////////////////////////////////////////////////////////////
    int seq_num = 1;
    int sock = -1;

protected:
    ////////////////////////////////////////////////////////////////////////////
    //
    ////////////////////////////////////////////////////////////////////////////
    void sync(bool last = false);
public:
    ////////////////////////////////////////////////////////////////////////////
    //
    ////////////////////////////////////////////////////////////////////////////
    bool present();

    ////////////////////////////////////////////////////////////////////////////
    //
    ////////////////////////////////////////////////////////////////////////////
    presence_icmp(char* name, char* addr, int time_limit = 300);

    ////////////////////////////////////////////////////////////////////////////
    // When was the device last detected
    // If the device was detected within the time limit, returns now_floor()
    ////////////////////////////////////////////////////////////////////////////
    time_point get_last_time_present();

    ////////////////////////////////////////////////////////////////////////////
    // When was the device last undetected for at least time_limit seconds?
    // If the device was not detected within the time limit, returns now_floor()
    ////////////////////////////////////////////////////////////////////////////
    time_point get_last_time_not_present();
};

#endif
