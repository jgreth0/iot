
#ifndef _PRESENCE_H_
#define _PRESENCE_H_

#include "module.hpp"

////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////
class presence : public module {
public:
    ////////////////////////////////////////////////////////////////////////////
    //
    ////////////////////////////////////////////////////////////////////////////
    virtual bool present() = 0;

    ////////////////////////////////////////////////////////////////////////////
    // When was the device last detected
    // If the device was detected within the time limit, returns now_floor()
    ////////////////////////////////////////////////////////////////////////////
    virtual time_point get_last_time_present() = 0;

    ////////////////////////////////////////////////////////////////////////////
    // When was the device last undetected for at least time_limit seconds?
    // If the device was not detected within the time limit, returns now_floor()
    ////////////////////////////////////////////////////////////////////////////
    virtual time_point get_last_time_not_present() = 0;

    presence(bool automatic = true, int update_frequency = 1) :
        module { automatic, update_frequency } {}
};

#endif
